{"version":3,"sources":["api/product.js","components/UI/button/MyButton.jsx","components/UI/Input/MyInput.jsx","components/Form/Form.jsx","components/Modal/Modal.jsx","components/ProductCard/ProductCard.jsx","components/CardList/CardList.jsx","App.js","index.js"],"names":["api","getProduct","a","fetch","response","json","allProduct","slice","MyButton","children","props","MyInput","className","Form","onCancel","cardName","cardPrice","useState","names","setNames","number","setNumber","namesDirty","setNamesDirty","numberDirty","setNumberDirty","namesError","setNamesError","numberError","setNumberError","formValid","setformValid","useEffect","nameHandler","event","target","value","test","String","toLowerCase","numberHandler","Number","length","blurHandler","name","onSubmit","preventDefault","onChange","onBlur","placeholder","type","disabled","onClick","console","log","Modal","category","price","ProductCard","modal","setModal","CardList","cards","map","card","App","minObj","posts","setPost","reduce","min","obj","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43866c77.chunk.js","sourcesContent":["const api = `https://run.mocky.io/v3/b7d36eea-0b3f-414a-ba44-711b5f5e528e`;\n\nexport async function getProduct() {\n  try {\n    const response = await fetch(api);\n    const allProduct = await response.json();\n    return allProduct.slice(0, 6);\n  } catch (error) {\n\n    return error;\n  }\n}","import React from 'react';\n\nconst MyButton = ({children, ...props}) => {\n\n  return (\n    <button {...props} >\n      {children}\n    </button>\n  )\n}\n\nexport default MyButton;","import React from 'react';\nimport './MyInput.css'\n\nconst MyInput = (props) => {\n\n  return (\n    <input className=\"myInpt\" {...props}/>\n  )\n}\n\nexport default MyInput;","import React, {useEffect, useState} from 'react';\nimport MyButton from '../UI/button/MyButton';\nimport MyInput from '../UI/Input/MyInput'\nimport './Form.css'\nimport '../UI/button/MyButton.css'\n\nconst Form = ({onCancel, cardName, cardPrice}) => {\n\n  const [names, setNames] = useState('');\n  const [number, setNumber] = useState('');\n  const [namesDirty, setNamesDirty] = useState(false);\n  const [numberDirty, setNumberDirty] = useState(false);\n  const [namesError, setNamesError] = useState('This field in required');\n  const [numberError, setNumberError] = useState('This field in required');\n  const [formValid, setformValid] = useState(false);\n\n  useEffect(() => {\n    if(namesError || numberError) {\n      setformValid(false)\n    } else {\n      setformValid(true)\n    }\n  }, [namesError, numberError])\n\n  const nameHandler = (event) => {\n    setNames(event.target.value)\n    const validationName = /[a-zA-Z]+/g;\n\n    if(!validationName.test(String(event.target.value).toLowerCase())) {\n      setNamesError('Only letters allowed')\n    } else {\n      setNamesError('')\n    }\n  }\n\n  const numberHandler = (event) => {\n    setNumber(event.target.value)\n\n    const validationNumber = /[0-9]+/g;\n\n\n    if(!validationNumber.test(Number(event.target.value))) {\n      setNumberError('Only numbers allowed')\n    } else if(event.target.value.length > 12 || event.target.value.length < 10) {\n        setNumberError('Should contain 12 characters')\n    } \n    else {\n      setNumberError('')\n    }\n  }\n  \n\n  const blurHandler = (event) => {\n    switch(event.target.name) {\n      case 'name':\n        setNamesDirty(true)\n        break\n      case 'number':\n        setNumberDirty(true)\n        break\n    }\n  }\n\n  const clickButton = () => {\n    if ((setNames('') || setNumber(''))) {\n      setNamesError('This field in required')\n      setNumberError('This field in required')\n    } else {\n      console.log(names)\n      console.log(number)\n      console.log(cardName, cardPrice);\n      setNames('')\n      setNumber('')\n      onCancel(false)\n    }\n  }\n\n\n  return (\n    <>\n          <form\n            className=\"form-container\"\n            onSubmit={(event) => event.preventDefault()}\n          >\n            {(namesDirty && namesError)\n              ? (\n                <>\n                  <MyInput\n                    onChange={event => nameHandler(event)}\n                    value={names}\n                    onBlur = {event => blurHandler(event)}\n                    name=\"name\"\n                    placeholder=\"Name\"\n                    type=\"text\"\n                    className=\"input-error\"\n                  />\n                  <i className=\"far fa-times-circle circle-error\"/>\n                  <div className=\"container-error\">{namesError}</div>\n                </>\n              )\n              : \n              (\n                <MyInput\n                  onChange={event => nameHandler(event)}\n                  value={names}\n                  onBlur = {event => blurHandler(event)}\n                  name=\"name\"\n                  placeholder=\"Name\"\n                  type=\"text\"\n                  className=\"myInpt\"\n                />\n                )\n            }\n            {(numberError && numberDirty)\n              ? (\n                <>\n                  <MyInput\n                    onChange={event => numberHandler(event)}\n                    value={number}\n                    onBlur = {event => blurHandler(event)}\n                    name=\"number\"\n                    placeholder=\"Number\"\n                    type=\"text\"\n                    className=\"input-error\"\n                  />\n                  <i className=\"far fa-times-circle circle-error\"/>\n                  <div className=\"container-error\">{numberError}</div>\n                </>\n              )\n              : \n              (\n                <MyInput\n                  onChange={event => numberHandler(event)}\n                  value={number}\n                  onBlur = {event => blurHandler(event)}\n                  name=\"number\"\n                  placeholder=\"Number\"\n                  type=\"text\"\n                  className=\"myInpt\"\n                />\n                )\n            }\n            <>\n              <MyButton\n                className=\"button button-order\"\n                disabled={!formValid}\n                onClick={\n                  clickButton\n                }\n              >\n                <span>\n                  order\n                </span>\n              </MyButton>\n            </>\n          </form>\n    </>\n  );\n}\n\nexport default Form;","import React from 'react';\nimport Form from '../Form/Form';\nimport './Modal.css'\n\nconst Modal = ({\n  name,\n  category,\n  price,\n  onCancel,\n}) => {\n\n  const closeModal = () => {\n    onCancel(false)\n  }\n\n  return (\n    <>\n        <div className=\"card\">\n          <button\n            onClick={closeModal}\n            className=\"button-close\"\n          >\n            X\n          </button>\n          <div>\n            <p className=\"text-card text-card__modal\">\n              {category}\n            </p>\n            <h1 className=\"title-card title-card__modal\">\n              {name}\n            </h1>\n          </div>\n          <div className=\"container-price container-price__modal\">\n            <p className=\"text-price text-price__modal\"> \n              <span className=\"span-price\">$</span> \n              {price}\n            </p>\n          </div>\n          <Form onCancel={onCancel} cardName={name} cardPrice={price}/>\n        </div>\n    </>\n  );\n}\n\nexport default Modal;","import React, {useState} from 'react';\nimport MyButton from '../UI/button/MyButton'\nimport Modal from '../Modal/Modal';\nimport './ProductCard.css'\nimport '../UI/button/MyButton.css'\n\nconst ProductCard = ({\n  name,\n  category,\n  price,\n}) => {\n\n  const [modal, setModal] = useState(false)\n\n  const openModal = () => {    \n    setModal(true)\n  }\n  \n  return (\n  <>\n    <div className=\"card\">\n      <div>\n        <p className=\"text-card\">\n          {category}\n        </p>\n        <h1 className=\"title-card\">\n          {name}\n        </h1>\n      </div>\n      <div className=\"container-price\">\n        <p className=\"text-price\"> \n          <span className=\"span-price\">$</span> \n          {price}\n        </p>\n        <MyButton className=\"button-add\" onClick={openModal}>buy</MyButton>\n      </div>\n    </div>\n    {modal && \n          <div className=\"container-modal\">\n            <div className=\"card-modal\">\n              <Modal onCancel={setModal}\n                name={name}\n                category={category}\n                price={price}\n              />\n            </div>\n          </div>\n        }\n  </>\n)};\n\nexport default ProductCard;\n","import React from 'react';\nimport ProductCard from '../ProductCard/ProductCard';\nimport './CardList.css'\n\nconst CardList = ({\n  cards = [],\n}) => (\n  <div className=\"cards\">\n    {cards.map(card => (\n      <ProductCard key={card.price} {...card}/>\n    ))}\n  </div>\n);\n\nexport default CardList;","import React, {useState, useEffect} from 'react';\nimport './styles/App.css';\nimport {getProduct} from './api/product'\nimport MyButton from './components/UI/button/MyButton'\nimport CardList from './components/CardList/CardList.jsx';\nimport Modal from './components/Modal/Modal';\n\nfunction App() {\n\n  const [posts, setPost] = useState([])\n  const [modal, setModal] = useState(false)\n\n  useEffect(() => {\n    (async() => setPost(await getProduct()))()\n  },[])\n  \n  const openModal = () => {    \n    setModal(true)\n  }\n\n  let minObj;\n  if (posts.length !== 0) {\n    minObj = [...posts].reduce(function(min, obj) {\n      return obj.price > min.price? min : obj;\n    });\n  } else {\n    return posts\n  }\n\n  return (\n    <div className=\"App\">\n      <CardList cards={posts} />\n      <MyButton\n        className=\"button\"\n        onClick={openModal}\n      >\n        Buy cheapest\n      </MyButton>\n      {modal && \n        <div className=\"container-modal\">\n          <div className=\"card-modal\">\n            <Modal\n              onCancel={setModal}\n              name={minObj.name}\n              category={minObj.category}\n              price={minObj.price}\n            />\n          </div>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}